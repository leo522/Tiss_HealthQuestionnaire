@*延遲記憶(5)*@
@model IEnumerable<Tiss_HealthQuestionnaire.Models.DelayedRecallViewModel>

<div class="p-4">
    <h2 class="text-xl font-bold mb-4">5. 延遲記憶 (Delayed Recall)</h2>
    <h3 class="text-xl font-bold mb-4">請選手回想複誦上述提到的十個詞彙。(0錯誤；1正確)</h3>
    <table class="min-w-full bg-white border border-gray-300 text-center question-group" data-type="radio">
        <thead>
            <tr class="bg-gray-100">
                <th class="border border-gray-300 px-4 py-2">詞彙</th>
                <th class="border border-gray-300 px-4 py-2">分數</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td class="border px-4 py-2">@item.Word</td>
                    <td class="border px-4 py-2">
                        <label>
                            <input type="radio" name="score_@item.OrderNumber" value="0" class="form-radio h-5 w-5 memory-option"> 0
                        </label>
                        <label class="ml-4">
                            <input type="radio" name="score_@item.OrderNumber" value="1" class="form-radio h-5 w-5 memory-option"> 1
                        </label>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr class="bg-gray-100">
                <td class="border px-4 py-2 font-semibold">總分</td>
                <td class="border px-4 py-2 font-semibold">
                    <span id="totalScore">0</span> / @Model.Count()
                </td>
            </tr>
        </tfoot>
    </table>

    <!-- 測驗開始時間 -->
    <div class="mt-4 flex items-center">
        <label for="testStartTime" class="mr-2 font-semibold">測驗開始時間：</label>
        <input type="time" id="testStartTime" name="testStartTime" class="border px-2 py-1 w-32" placeholder="HH:mm">
    </div>
</div>

<script>
    function initializeDelayedRecall() {
        const scoreKey = 'DelayedRecallTotalScore';
        const timeKey = 'DelayedRecallStartTime';

        loadScores();

        // 監聽所有 radio 按鈕變更
        $('input[type="radio"]').on('change', function () {
            updateTotalScore();
            saveScores();
        });

        // 監聽開始時間
        $('#testStartTime').on('change', function () {
            saveScores();
        });

        function updateTotalScore() {
            let totalScore = 0;
            $('input[type="radio"]:checked').each(function () {
                totalScore += parseInt($(this).val());
            });
            $('#totalScore').text(totalScore);
            sessionStorage.setItem(scoreKey, totalScore);
        }

        function saveScores() {
            $('input[type="radio"]').each(function () {
                if ($(this).is(':checked')) {
                    sessionStorage.setItem($(this).attr('name'), $(this).val());
                }
            });
            const startTime = $('#testStartTime').val();
            sessionStorage.setItem(timeKey, startTime);
        }

        function loadScores() {
            // 載入radio勾選
            $('input[type="radio"]').each(function () {
                const savedValue = sessionStorage.getItem($(this).attr('name'));
                if (savedValue !== null && $(this).val() === savedValue) {
                    $(this).prop('checked', true);
                }
            });

            const savedTotalScore = sessionStorage.getItem(scoreKey);
            if (savedTotalScore !== null) {
                $('#totalScore').text(savedTotalScore);
            }

            const savedStartTime = sessionStorage.getItem(timeKey);
            if (savedStartTime !== null) {
                $('#testStartTime').val(savedStartTime);
            }
        }
    }
</script>