@*短期記憶(2)*@
@model IEnumerable<Tiss_HealthQuestionnaire.Models.ImmediateMemoryViewModel>
@{
    Layout = null;
}
<div class="p-4">
    <h2 class="text-xl font-bold mb-4">2. 短期記憶 (Immediate Memory) (測驗三次，0錯誤；1正確)</h2>
    <div class="overflow-x-auto">
        <table class="min-w-full bg-white border border-gray-300 text-center">
            <thead>
                <tr class="bg-gray-100">
                    <th class="border border-gray-300 px-4 py-2">詞彙</th>
                    <th class="border border-gray-300 px-4 py-2">第一次</th>
                    <th class="border border-gray-300 px-4 py-2">第二次</th>
                    <th class="border border-gray-300 px-4 py-2">第三次</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="hover:bg-gray-100 question-group">
                        <td class="border border-gray-300 px-4 py-2">@Html.Encode(item.Word)</td>
                        <td class="border border-gray-300 px-4 py-2">
                            <div class="flex justify-center items-center">
                                <input type="radio" name="first_@item.OrderNumber" value="0" class="form-radio h-5 w-5 memory-option">
                                <label class="mx-2">0</label>
                                <input type="radio" name="first_@item.OrderNumber" value="1" class="form-radio h-5 w-5 memory-option">
                                <label class="mx-2">1</label>
                            </div>
                        </td>
                        <td class="border border-gray-300 px-4 py-2">
                            <div class="flex justify-center items-center">
                                <input type="radio" name="second_@item.OrderNumber" value="0" class="form-radio h-5 w-5 memory-option">
                                <label class="mx-2">0</label>
                                <input type="radio" name="second_@item.OrderNumber" value="1" class="form-radio h-5 w-5 memory-option">
                                <label class="mx-2">1</label>
                            </div>
                        </td>
                        <td class="border border-gray-300 px-4 py-2">
                            <div class="flex justify-center items-center">
                                <input type="radio" name="third_@item.OrderNumber" value="0" class="form-radio h-5 w-5 memory-option">
                                <label class="mx-2">0</label>
                                <input type="radio" name="third_@item.OrderNumber" value="1" class="form-radio h-5 w-5 memory-option">
                                <label class="mx-2">1</label>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr class="bg-gray-100">
                    <td class="border border-gray-300 px-4 py-2 font-semibold">每次分數</td>
                    <td class="border border-gray-300 px-4 py-2" id="firstTotal">/ 10</td>
                    <td class="border border-gray-300 px-4 py-2" id="secondTotal">/ 10</td>
                    <td class="border border-gray-300 px-4 py-2" id="thirdTotal">/ 10</td>
                </tr>
            </tfoot>
        </table>
    </div>

    <!-- 最後完成時間 -->
    <div class="mt-4 flex items-center">
        <span class="mr-2 text-lg font-semibold">●</span>
        <span class="mr-2">最後完成時間 (分:秒)：</span>
        <input type="time" name="CompletionTime" class="border-b border-dotted text-lg font-semibold w-30 px-2" placeholder="MM:SS">
    </div>

    <!-- 短期記憶總分 -->
    <div class="flex items-center mt-4">
        <span class="mr-2 text-lg font-semibold">●</span>
        <span class="mr-2">短期記憶總分：</span>
        <span id="totalScore" class="border-b border-dotted text-lg font-semibold w-12">0</span> / 30
    </div>
</div>

<script>
    function initializeImmediateMemory() {
        const scoreKey = 'ImmediateMemoryScore';

        loadScores();

        // 監聽選項變更
        $('.memory-option').on('change', function () {
            const groupName = $(this).attr('name').split('_')[0];
            updateSingleScore(groupName);
            saveScores();
        });

        function updateSingleScore(groupName) {
            let total = 0;
            $(`input[name^="${groupName}_"]:checked`).each(function () {
                total += parseInt($(this).val());
            });
            $(`#${groupName}Total`).text(`${total} / 10`);
            updateTotalScore();
        }

        function updateTotalScore() {
            const firstTotal = parseInt($('#firstTotal').text().split('/')[0]) || 0;
            const secondTotal = parseInt($('#secondTotal').text().split('/')[0]) || 0;
            const thirdTotal = parseInt($('#thirdTotal').text().split('/')[0]) || 0;
            const totalScore = firstTotal + secondTotal + thirdTotal;
            $('#totalScore').text(totalScore);
            sessionStorage.setItem(scoreKey, totalScore);
        }

        function saveScores() {
            $('input[type="radio"]').each(function () {
                if ($(this).is(':checked')) {
                    sessionStorage.setItem($(this).attr('name'), $(this).val());
                }
            });
        }

        function loadScores() {
            $('input[type="radio"]').each(function () {
                const savedValue = sessionStorage.getItem($(this).attr('name'));
                if (savedValue !== null && $(this).val() === savedValue) {
                    $(this).prop('checked', true);
                }
            });
            updateSingleScore('first');
            updateSingleScore('second');
            updateSingleScore('third');
        }
    }
</script>